{
  "_from": "gitbook",
  "_id": "gitbook@2.6.9",
  "_inBundle": false,
  "_integrity": "sha512-GFuOpq5Qv7JktAe9U8LfCkrBRshl0Ymm2eVMz8FuNXr9vkA2TTQrXOHlU04ElfbDIyLdA5Zx5362OnZS1ItNQA==",
  "_location": "/gitbook",
  "_phantomChildren": {
    "are-we-there-yet": "1.1.5",
    "console-control-strings": "1.1.0",
    "gauge": "2.7.4",
    "set-blocking": "2.0.0"
  },
  "_requested": {
    "escapedName": "gitbook",
    "fetchSpec": "latest",
    "name": "gitbook",
    "raw": "gitbook",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/gitbook/-/gitbook-2.6.9.tgz",
  "_shasum": "d1962e4609ad9f1805bb983ad3e27e67623463e6",
  "_spec": "gitbook",
  "_where": "/home/hs/デスクトップ/md_demo",
  "author": {
    "email": "contact@gitbook.com",
    "name": "FriendCode Inc."
  },
  "bin": {
    "gitbook": "./bin/gitbook.js"
  },
  "bugs": {
    "url": "https://github.com/GitbookIO/gitbook/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "email": "aaron@gitbook.com",
      "name": "Aaron O'Mullan"
    },
    {
      "email": "samy@gitbook.com",
      "name": "Samy Pessé"
    }
  ],
  "dependencies": {
    "bash-color": "0.0.3",
    "cheerio": "0.19.0",
    "chokidar": "~1.0.5",
    "crc": "3.2.1",
    "dom-serializer": "0.1.0",
    "escape-string-regexp": "1.0.3",
    "fs-extra": "0.16.5",
    "fstream-ignore": "1.0.2",
    "gitbook-parsers": "0.8.9",
    "gitbook-plugin-fontsettings": "1.0.2",
    "gitbook-plugin-highlight": "1.0.3",
    "gitbook-plugin-livereload": "0.0.1",
    "gitbook-plugin-search": "1.1.0",
    "gitbook-plugin-sharing": "1.0.1",
    "github-slugid": "1.0.0",
    "graceful-fs": "3.0.5",
    "i18n": "github:gitbookio/i18n-node#f26fbfa6b1d7a3bb086ff7849ca262f58a30255b",
    "json-schema-defaults": "0.1.1",
    "jsonschema": "1.0.2",
    "juice": "1.5.0",
    "lodash": "3.10.1",
    "merge-defaults": "0.2.1",
    "npm": "2.4.1",
    "npmi": "0.1.1",
    "nunjucks": "2.2.0",
    "nunjucks-autoescape": "1.0.0",
    "nunjucks-filter": "1.0.0",
    "q": "1.0.1",
    "request": "2.51.0",
    "resolve": "0.6.3",
    "semver": "5.0.1",
    "send": "github:gitbookio/send#9081de9cb0fc85d60e871685f252c98db764cb55",
    "spawn-cmd": "0.0.2",
    "tiny-lr": "0.2.1",
    "tmp": "0.0.24",
    "urijs": "1.17.0"
  },
  "deprecated": false,
  "description": "Library and cmd utility to generate GitBooks",
  "devDependencies": {
    "browserify": "11.0.1",
    "eslint": "1.5.0",
    "font-awesome": "4.1.0",
    "gitbook-markdown-css": "1.0.1",
    "gulp": "^3.8.11",
    "gulp-less": "3.0.2",
    "gulp-minify-css": "1.0.0",
    "gulp-rename": "^1.2.2",
    "gulp-uglify": "1.1.0",
    "gulp-util": "3.0.6",
    "jquery": "2.1.4",
    "merge-stream": "0.1.7",
    "mocha": "2.3.2",
    "mousetrap": "1.5.3",
    "should": "7.1.0",
    "should-promised": "0.3.1",
    "vinyl-source-stream": "1.1.0"
  },
  "homepage": "https://www.gitbook.com",
  "keywords": [
    "git",
    "book",
    "gitbook"
  ],
  "license": "Apache-2.0",
  "main": "lib/index.js",
  "name": "gitbook",
  "optionalDependencies": {},
  "readme": "GitBook\n=======\n\n[![NPM version](https://badge.fury.io/js/gitbook.svg)](http://badge.fury.io/js/gitbook)\n[![Linux Build Status](https://travis-ci.org/GitbookIO/gitbook.png?branch=master)](https://travis-ci.org/GitbookIO/gitbook)\n[![Windows Build status](https://ci.appveyor.com/api/projects/status/63nlflxcwmb2pue6?svg=true)](https://ci.appveyor.com/project/GitBook/gitbook)\n[![Slack Status](https://slack.gitbook.com/badge.svg)](https://slack.gitbook.com)\n\nGitBook is a command line tool (and Node.js library) for building beautiful books using GitHub/Git and Markdown (or AsciiDoc). Here is an example: [Learn Javascript](https://www.gitbook.com/book/GitBookIO/javascript).\n\nYou can publish and host books easily online using [gitbook.com](https://www.gitbook.com). A desktop editor is [also available](https://www.gitbook.com/editor).\n\nCheck out the [GitBook Community Slack Channel](https://slack.gitbook.com), Stay updated by following [@GitBookIO](https://twitter.com/GitBookIO) on Twitter or [GitBook](https://www.facebook.com/gitbookcom) on Facebook.\n\nComplete documentation is available at [help.gitbook.com](http://help.gitbook.com/).\n\n![Image](https://raw.github.com/GitbookIO/gitbook/master/preview.png)\n\n## How to use it:\n\nGitBook can be installed from **NPM** using:\n\n```\n$ npm install gitbook-cli -g\n```\n\nCreate the directories and files for a book from its [SUMMARY.md](https://github.com/GitbookIO/gitbook#book-format) file (if existing) using\n\n```\n$ gitbook init\n```\n\nYou can serve a repository as a book using:\n\n```\n$ gitbook serve\n```\n\nOr simply build the static website using:\n\n```\n$ gitbook build\n```\n\n## Features\n\n* [Output as a website or ebook (pdf, epub, mobi)](http://help.gitbook.com/format/output.html)\n* [Multi-Languages](http://help.gitbook.com/format/languages.html)\n* [Glossary](http://help.gitbook.com/format/glossary.html)\n* [Cover](http://help.gitbook.com/format/cover.html)\n* [AsciiDoc Support](http://help.gitbook.com/format/asciidoc.html)\n* [Variables and Templating](http://help.gitbook.com/format/templating.html)\n* [Content References](http://help.gitbook.com/format/conrefs.html)\n* [Plugins](http://help.gitbook.com/format/plugins.html)\n* Interractive reader website:\n    * Search\n    * Font Settings (Serif, Sans Serif)\n    * Themes: white, sepia, night\n\n## Output Formats\n\nGitBook can generate your book in the following formats:\n\n* **Static Website**: This is the default format. It generates a complete interactive static website that can be, for example, hosted on GitHub Pages.\n* **eBook**: You need to have [ebook-convert](http://manual.calibre-ebook.com/cli/ebook-convert.html) installed.  You can specify the eBook filename as the second argument, otherwise `book` will be used.\n  * Generate a **PDF** using:  `gitbook pdf ./myrepo ./mybook.pdf`\n  * Generate a **ePub** using: `gitbook epub ./myrepo ./mybook.epub`\n  * Generate a **MOBI** using: `gitbook mobi ./myrepo ./mybook.mobi`\n* **JSON**: This format is used for debugging or extracting metadata from a book. Generate this format using: ```gitbook build ./myrepo --format=json```.\n\n## Book Format\n\nA book is a Git repository containing at least 2 files: `README.md` and `SUMMARY.md`.\n\n#### README.md\n\nTypically, this should be the introduction for your book. It will be automatically added to the final summary.\n\n#### SUMMARY.md\n\nThe `SUMMARY.md` defines your book's structure. It should contain a list of chapters, linking to their respective pages.\n\nExample:\n\n```markdown\n# Summary\n\nThis is the summary of my book.\n\n* [section 1](section1/README.md)\n    * [example 1](section1/example1.md)\n    * [example 2](section1/example2.md)\n* [section 2](section2/README.md)\n    * [example 1](section2/example1.md)\n```\n\nFiles that are not included in `SUMMARY.md` will not be processed by `gitbook`.\n\n#### Multi-Languages\n\nGitBook supports building books written in multiple languages. Each language should be a sub-directory following the normal GitBook format, and a file named `LANGS.md` should be present at the root of the repository with the following format:\n\n```markdown\n* [English](en/)\n* [French](fr/)\n* [Español](es/)\n```\n\nYou can see a complete example with the [Learn Git](https://github.com/GitbookIO/git) book.\n\n#### Glossary\n\nAllows you to specify terms and their respective definitions to be displayed in the glossary. Based on those terms, `gitbook` will automatically build an index and highlight those terms in pages.\n\nThe `GLOSSARY.md` format is very simple :\n\n```markdown\n# term\nDefinition for this term\n\n# Another term\nWith it's definition, this can contain bold text and all other kinds of inline markup ...\n```\n\n#### Variables and Templating\n\nA set of variables can be defined in the `book.json`:\n\n```js\n{\n    \"variables\": {\n        \"host\": \"mybook.com\"\n    }\n}\n```\n\nThese variables can be used in the markdown files:\n\n```\nThe host is {{ book.host }}\n```\n\nYou can also use condition with these variables:\n\n```\n{% if book.host == \"mybook.com\" %}\n\n{% else %}\n\n{% endif %}\n```\n\nVariables of `book.json` are available in the `book` namespace. You can also access informations about the `file` itself and the `gitbook` version:\n\n```\nMy file is {{ file.path }}\nModified at {{ file.mtime }}\nBook built with GitBook {{ gitbook.version }}\n```\n\n#### Content References\n\nYou can use \"content references,\" or conrefs, when writing books or documentation using GitBook.\n\nInclude a file from the same book:\n\n```\n{% include \"./test.md\" %}\n```\n\nor from a git repository (with a specific revision):\n\n```\n{% include \"git+https://github.com/GitbookIO/documentation.git/README.md#1.0.1\" %}\n```\n\nIncludes can be used with variables (see [Variables and Templating](#variables-and-templating)):\n\n```\n{% include book.ref_doc_readme %}\n```\n\n#### Ignoring files & folders\n\nGitBook will read the `.gitignore`, `.bookignore` and `.ignore` files to get a list of files and folders to skip. (The format inside those files follows the same convention as `.gitignore`).\n\nBest practices for the `.gitignore` is to ignore build files from **node.js** (`node_modules`, ...) and build files from GitBook: `_book`, `*.epub`, `*.mobi` and `*.pdf` ([Download GitBook.gitignore](https://github.com/github/gitignore/blob/master/GitBook.gitignore)).\n\n#### Cover\n\nA cover image can be set by creating a file: **/cover.jpg**.\nThe best resolution is **1800x2360**. The generation of the cover can be done automatically using the plugin [autocover](https://github.com/GitbookIO/plugin-autocover).\n\nA small version of the cover can also be set by creating a file: **/cover_small.jpg**.\n\n#### AsciiDoc\n\nSince version 2.0.0, AsciiDoc can be used instead of Markdown, simply replace the `.md` by the `.adoc` extension. Chapters in the summary are detected from an ordered list in the `SUMMARY.adoc`.\n\n## Publish your book\n\nThe platform [GitBook.com](https://www.gitbook.com/) is like an \"Heroku for books\": you can create a book on it (public, paid, or private) and update it using **git push**.\n\n## Plugins\n\nPlugins can be used to extend your book's functionality. Read [GitbookIO/plugin](https://github.com/GitbookIO/plugin) for more information about how to build a plugin for GitBook.\n\nPlugins needed to build a book can be installed using: `gitbook install ./`. You can find plugins at [plugins.gitbook.com](http://plugins.gitbook.com).\n\n\n## Debugging\n\nYou can use the options `--log=debug` and `--debug` to get better error messages (with stack trace). For example:\n\n```\n$ gitbook build ./ --log=debug --debug\n```\n\n#### How to use the latest commit from GitBook in gitbook-cli\n\nTo use the latest commit from `GitBook/gitbook` with `gitbook-cli`:\n\n```\n$ git clone https://github.com/GitbookIO/gitbook.git ./gitbook\n$ gitbook versions:link ./gitbook\n```\n\nNow `gitbook-cli` will be using the `./gitbook` folder.\n\nYou can uninstall it using: `gitbook versions:uninstall latest`.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/GitbookIO/gitbook.git"
  },
  "scripts": {
    "test": "mocha --reporter spec --timeout 15000"
  },
  "version": "2.6.9"
}
